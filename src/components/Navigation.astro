---
const currentPath = Astro.url.pathname;

const navLinks = [
  { path: '/', label: 'Inicio', emoji: 'üè†' },
  { path: '/blog', label: 'Blog', emoji: '‚úèÔ∏è' },
  { path: '/resources', label: 'Recursos', emoji: 'üìö' },
];
---

<header>
  <nav id="navigation" class="navbar navbar-expand-lg fixed-top">
    <div class="container">

      <a class="navbar-brand ps-1" href="/">
        <img class="me-1" src="/favicon.png" alt="Logo" height="100%">
      </a>

      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav m-auto mb-2 mb-lg-0 column-gap-3">
          {navLinks.map(link => (
            <li class="nav-item">
              <a class={`nav-link ${currentPath === link.path ? 'active' : ''}`} aria-current="page" href={link.path}><span class="emoji">{link.emoji}</span>{link.label}</a>
            </li>
          ))}
        </ul>
        <button id="toggleTheme" class="btn btn-sm btn-light shadow">
          <span id="themeIcon" class="d-inline-block lh-sm icon"></span>
        </button>
      </div>

    </div>
  </nav>
</header>

<script>
  /* Animated navbar with scroll */
  const navbar = document.getElementById('navigation');
  const scrollTransition = 80
  if (window.scrollY > scrollTransition) {
    navbar.classList.add('scrolled');
  }
  window.addEventListener('scroll', () => {
    if (window.scrollY > scrollTransition) {
      navbar.classList.add('scrolled');
    } else {
      navbar.classList.remove('scrolled');
    }
  });

  /* Select theme dark/light */
  const html = document.documentElement;
  const btn = document.getElementById('toggleTheme');
  const icon = document.getElementById('themeIcon');
  const savedTheme = localStorage.getItem('theme');
  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
  let theme = savedTheme || (prefersDark ? 'dark' : 'light');

  function applyTheme(mode, init=false) {
    if (mode === 'dark') {
      html.setAttribute('data-bs-theme', 'dark'); // Bootstrap 5.3+
    } else {
      html.setAttribute('data-bs-theme', 'light');
    }
    localStorage.setItem('theme', mode);
    setIcon(mode, init);
  }

  function setIcon(mode, init) {
    const icon_sun = '<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="currentColor" class="bi bi-brightness-high-fill" viewBox="0 0 16 16"><path d="M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708"/></svg>'
    const icon_moon = '<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="currentColor" class="bi bi-moon" viewBox="0 0 16 16"><path d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278M4.858 1.311A7.27 7.27 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.32 7.32 0 0 0 5.205-2.162q-.506.063-1.029.063c-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286"/></svg>'
    if(init) {
      icon.innerHTML = mode === 'dark' ? icon_moon : icon_sun;
    } else {
      icon.classList.add('fade-out');
      setTimeout(() => {
        icon.innerHTML = mode === 'dark' ? icon_moon : icon_sun;
        icon.classList.remove('fade-out');
        icon.classList.add('fade-in');
        setTimeout(() => icon.classList.remove('fade-in'), 300);
      }, 150);
    }
  }

  applyTheme(theme, true);
  btn.addEventListener('click', () => {
    theme = theme === 'dark' ? 'light' : 'dark';
    applyTheme(theme);
  });

</script>
