## Utilizar un backend local

- Desconectate si estas conectado a otro backend

```bash
pulumi logout
```

- Conectate a un backend local indicando el directorio que vas a utilizar

```bash
# Por ejemplo, si quieres utilizar le directorio /app/data
pulumi login file:///app/data
```

- Configura el proyecto de GCP

```bash
pulumi config set gcp:project <YOUR_GCP_PROJECT_ID>
```

- Despliega los recursos

```bash
pulumi up
```


## Migración de un estado en pulumi cloud backend a un bucket en GCP

- Conectate a pulumi cloud backend

```bash
pulumi login
```

- Inicia el stack

```bash
pulumi new gcp-python
```

- Modifica el secret provider a modo contraseña para no tener problemas a la hora de importarlo en GCP

```bash
pulumi stack change-secrets-provider "passphrase"
# Pedirá que introduzcas la contraseña (Ej, 123)
```

- Despliega los recursos desde el estado de pulumi backend cloud

```bash
pulumi up
```

- Exporta el estado del stack a un fichero

```bash
pulumi stack export --file state.json
```

- Desconectate de pulumi backend cloud

```bash
pulumi logout
```

-  Crea el bucket <BUCKET_NAME> en GCP
- Conectate al backend indicando la url del bucket en GCP

```bash
pulumi login gs://<BUCKET_NAME>
```

- Configura las variables de entorno con la contraseña (Ej, 123) y el secret provider

```bash
export PULUMI_CONFIG_PASSPHRASE=<PASSWORD>
export PULUMI_CONFIG_SECRETS_PROVIDER=passphrase
```

- Incia un stack en el nuevo backend con el mismo nombre que tenia en pulumi cloud backend

```bash
pulumi stack init
```

- Indica el ID del proyecto en GCP en la configuración del stack

```bash
pulumi config set gcp:project <YOUR_GCP_PROJECT_ID>
```

- Importa el estado del stack

```bash
pulumi stack import --file state.json
````

- Refresca el estado

```bash
pulumi refresh
```

- Si realizas cambios en los recursos a modo de prueba, ejecuta `pulumi refresh` antes de ejecutar el plan para que identifique el cambio correctamente.

- ELimina los recursos

```bash
pulumi destroy
```

## Comandos de utilidad

- Comprobar el backend actual

```bash
pulumi whoami --verbose
```

- Trabajar con los stacks

```bash
pulumi stack ls
pulumi stack select <STACK_NAME>
pulumi stack rm <STACK_NAME>
```

- Importar recursos al estado del stack

```bash
pulumi import gcp:storage/bucket:Bucket <NOMBRE_DEL_RECURSO_EN_PULUMI> <NOMBRE_DEL_BUCKET_EN_GCP>
# pulumi import gcp:storage/bucket:Bucket test-bucket test-company-bucket
```

- Eliminar recurso del estado

```bash
# Obtener el urn del recurso
pulumi stack export | jq '.deployment.resources[].urn'

# ELiminar recurso
pulumi state delete <URN>
# pulumi state delete urn:pulumi:dev::myproject::gcp:storage/bucket:Bucket::myBucket
# pulumi state delete urn:pulumi:dev::myproject::gcp:storage/bucket:Bucket::myBucket --force
```